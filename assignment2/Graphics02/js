function render1()
{
    // theta initialization
    gl.uniform1f(thetaLoc, 0);

    gl.clear( gl.COLOR_BUFFER_BIT );

    gl.uniform4fv(colorLoc,[0,1,0,1]);
    gl.uniform4fv(offsetLoc,[0.0,0.0,0,0]); 
    drawMountain();
   

    gl.uniform4fv(offsetLoc,[0.5,0.0,0,0]);    
    drawMountain();
   

    gl.uniform4fv(offsetLoc,[1.0,0.0,0,0]); 
    drawMountain();   

    gl.uniform4fv(colorLoc,[1,1,0,1]);


    gl.uniform4fv(offsetLoc,[-0.7,0.0,0,0]); 
    for(var i = 0; i<starlist.length; i++){
        drawStar(starlist[i][0],starlist[i][1]);
    }
    
   

    gl.uniform4fv(offsetLoc,[0.0,0.0,0,0]); 
    drawHouse();



    var moon = new Float32Array([
        -0.9,0.9, -1.0, 0.75, -1.0, 0.65,
        -0.9,0.9, -1.0, 0.65, -0.9, 0.50,
        -0.9,0.9, -0.9, 0.50, -0.80, 0.50,
        -0.9,0.9, -0.80, 0.50, -0.7, 0.65,
        -0.9,0.9, -0.7, 0.65, -0.7, 0.75,
        -0.9,0.9, -0.7, 0.75, -0.80, 0.9
        ])
    
        moonColor=[
            vec4(1,1,0,1),
            vec4(0.9,1,0,1),
            vec4(0.7,0.8,0,1),
            vec4(0.5,1,0,1),
            vec4(1,0.7,0,1),
            vec4(1,0.9,0,1),
            vec4(0.8,1,0,1),
            vec4(1,0.8,0,1),
            vec4(1,0.7,0,1),
            vec4(1,1,0,1),
            vec4(0.9,1,0,1),
            vec4(0.7,0.8,0,1),
            vec4(0.5,1,0,1),
            vec4(1,0.5,0,1),
            vec4(1,0.9,0,1),
            vec4(0.8,1,0,1),
            vec4(1,0.8,0,1),
            vec4(1,0.7,0,1)
        ];
    
        // Load the data into the GPU
        var bufferId = gl.createBuffer();
        gl.bindBuffer( gl.ARRAY_BUFFER, bufferId );
        gl.bufferData( gl.ARRAY_BUFFER,moon, gl.STATIC_DRAW );
    
        // Associate out shader variables with our data buffer
        
        var vPosition = gl.getAttribLocation( program, "vPosition" );
        gl.vertexAttribPointer( vPosition, 2, gl.FLOAT, false, 0, 0 );
        gl.enableVertexAttribArray( vPosition );
    
        var vertexColorBufferId = gl.createBuffer()
        gl.bindBuffer(gl.ARRAY_BUFFER, vertexColorBufferId)
        gl.bufferData(gl.ARRAY_BUFFER, flatten(moonColor), gl.STATIC_DRAW)
    
        var vColor = gl.getAttribLocation( program, "vColor" );
        gl.vertexAttribPointer( vColor, 4, gl.FLOAT, false, 0, 0 );
        gl.enableVertexAttribArray( vColor );
        thetaLoc = gl.getUniformLocation( program, "theta" );
        
        gl.uniform4fv(colorLoc,[1,1,0,1]);
        gl.uniform4f(offsetLoc, -0.8, 0.9, 0.0, 1);
        // rotation moon
        theta += (direction ? 0.1 : -0.1);
        gl.uniform1f(thetaLoc, theta);
        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 18);
    

   

    //gl.drawArrays(gl.TRIANGLES, 0, 18);

    setTimeout(
        function (){requestAnimFrame(render1);}, delay
    );
}